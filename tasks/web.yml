- name: Requesting API authentification token
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/auth.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: z_firstquery
  tags:
    - auth

- name: Parsing the authentification request to extract the token
  set_fact: "z_authtoken={{z_firstquery.json.result}}"
  tags:
    - auth

- name: Getting the hostid of the default http poller (via Zabbix API)
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    body: "{{lookup('template','templates/get_host.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  register: hostidquery
  tags:
    - add

- name: Parsing the get_site request to extract the hostid
  set_fact: "z_hostid={{hostidquery.json.result.0.hostid}}"
  tags:
    - add

- name: Parsing the get_site request to extract the application id
  set_fact: "zabbix_web_check_application_id={{item.applicationid}}"
  when: '{{ item.name == zabbix_web_check_application_name }}'
  with_items: '{{ hostidquery.json.result.0.applications }}'
  tags:
    - add

- name: Set default values for zabbix_web_check_websites
  set_fact:
    z_websites: "{{ (z_websites | default([])) + [{
        'name': item.url | regex_replace('https?://', ''),
        'method': 'GET',
        'state': 'present',
        'watch_window': zabbix_web_check_watch_window,
        'slow_threshold': zabbix_web_check_slow_threshold,
        'zabbix_host': {
          'name': zabbix_web_check_host,
          'hostid': z_hostid,
          'applicationid': zabbix_web_check_application_id,
        },
      } | combine(item)] }}"
  with_items: "{{zabbix_web_check_websites}}"

#- debug: var=z_websites

- name: Listing web scenarios flaggued as absent in ansible
  set_fact: "absent_scenarios={{z_websites|selectattr('state','equalto','absent')|list}}"
  tags:
    - delete

- name: Getting IDs of all web scenarios to delete (via Zabbix API)
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    body: "{{lookup('template','templates/get_site.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  with_items: "{{absent_scenarios}}"
  register: to_delete
  tags:
    - delete

- name: Deleting the supposed absent web scenarios in Zabbix
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/del_site.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  with_items : "{{to_delete.results}}"
  tags:
    - delete

- name: Adding web scenarios (zabbix API handles the indepotency)
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/add_web.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  with_items: "{{z_websites}}"
  when: "item.state == 'present'"
  register: result
  failed_when: not result.json.id
  tags:
    - add

#- debug: var=result

- name: Adding associated fail triggers (zabbix API handles the indepotency)
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/add_trigger.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  with_items: "{{z_websites}}"
  when: "item.state == 'present'"
  register: result
  failed_when: not result.json.id
  tags:
    - add
    - trigger

- name: Adding associated slow triggers (zabbix API handles the indepotency)
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/add_trigger2.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  with_items: "{{z_websites}}"
  when: "item.state == 'present'"
  register: result
  failed_when: not result.json.id
  tags:
    - add
    - trigger

#- debug: var=result

- name: Logging out from Zabbix API
  uri:
    url: "{{zabbix_jsonrpc_url}}"
    return_content: yes
    method: POST
    body: "{{lookup('template','templates/logout.j2')}}"
    body_format: json
    headers:
      Content-Type: "application/json-rpc"
  tags:
    - auth
